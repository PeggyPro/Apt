<Page
    x:Class="Apt.App.Views.Pages.Chat.Gpt.IndexPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Apt.App.Views.Pages.Chat.Gpt"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Apt.App.ViewModels.Pages.Chat.Gpt"
    xmlns:su="clr-namespace:Apt.Service.Utility;assembly=Apt.Service"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="HomeView"
    d:DataContext="{d:DesignInstance local:IndexPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="640"
    d:DesignWidth="960"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="MessagesDataTemplate">
            <Border
                Name="MessageBorder"
                MinWidth="280"
                MinHeight="40"
                Margin="10,0,60,10"
                HorizontalAlignment="Left"
                Background="{DynamicResource ControlFillColorDefaultBrush}"
                BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                BorderThickness="1"
                CornerRadius="4"
                SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="15" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="ImageMessageGrid" Margin="6,6,6,5">
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=ClipBorder}" />
                        </Grid.OpacityMask>
                        <Border
                            x:Name="ClipBorder"
                            Background="White"
                            CornerRadius="3" />
                        <Image
                            Cursor="Hand"
                            Source="{Binding Path=Image, Converter={StaticResource NullImageConverter}}"
                            Stretch="UniformToFill"
                            ToolTip="Click to open image in your default image viewer">
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction
                                        Command="{Binding DataContext.OpenImageCommand,
                                        RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </Image>
                    </Grid>
                    <!--<TextBlock
                        x:Name="MessageText"
                        Grid.Row="1"
                        Margin="10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Text="{Binding Text}"
                        TextWrapping="Wrap" />-->
                    <TextBox
                        x:Name="MessageText"
                        Grid.Row="1"
                        Margin="10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderThickness="0"
                        IsReadOnly="True"
                        Text="{Binding Text}"
                        TextWrapping="Wrap" />
                    <TextBlock
                        Grid.Row="2"
                        Margin="10,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        FontSize="10"
                        Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOwner}" Value="True">
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right" />
                    <Setter TargetName="MessageBorder" Property="Margin" Value="60,0,10,10" />
                    <Setter TargetName="MessageBorder" Property="Background" Value="{DynamicResource AccentTextFillColorPrimaryBrush}" />
                    <Setter TargetName="MessageBorder" Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                    <Setter TargetName="MessageBorder" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorInverseBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Image}" Value="{x:Null}">
                    <Setter TargetName="ImageMessageGrid" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                    <Setter TargetName="MessageText" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Text}" Value="{x:Null}" />
                        <Condition Binding="{Binding IsOwner}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10" />
                        <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <GroupBox
            Grid.Row="0"
            Padding="10"
            BorderThickness="0"
            Header="{Binding [ChatGptIndexPageHistory], Source={x:Static su:Language.Instance}}">
            <Grid>
                <ItemsControl
                    x:Name="MessagesItemsCtrl"
                    Margin="0,5,0,0"
                    ItemTemplate="{DynamicResource MessagesDataTemplate}"
                    ItemsSource="{Binding ViewModel.ChatHistory}"
                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <!--<i:Interaction.Behaviors>
                        <utils:BringNewItemIntoViewBehavior/>
                    </i:Interaction.Behaviors>-->
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer x:Name="scrollViewer">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>
            </Grid>
        </GroupBox>
        <GroupBox
            Grid.Row="1"
            Padding="10"
            BorderThickness="0"
            Header="{Binding ViewModel.MessageHeader}">
            <Grid
                Grid.Row="0"
                MaxHeight="480"
                IsEnabled="{Binding ViewModel.MessageEnabled}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ui:TextBox
                    Grid.Column="0"
                    AcceptsReturn="True"
                    KeyDown="TextBox_KeyDown"
                    MaxLength="{Binding ViewModel.PromptMaxLength}"
                    PlaceholderText="{Binding ViewModel.Placeholder}"
                    Text="{Binding ViewModel.Message, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
                    VerticalScrollBarVisibility="Visible" />
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ui:Button
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="6"
                        Appearance="Info"
                        Command="{Binding ViewModel.SetSendCommand}"
                        Content="{Binding [ChatGptIndexPageSend], Source={x:Static su:Language.Instance}}"
                        IsEnabled="{Binding ViewModel.SendEnabled}" />
                    <ui:Button
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="6"
                        Appearance="Caution"
                        Command="{Binding ViewModel.SetCancelCommand}"
                        Content="{Binding [ChatGptIndexPageCancel], Source={x:Static su:Language.Instance}}" />
                    <ui:Button
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="6"
                        Appearance="Success"
                        Command="{Binding ViewModel.SetResetCommand}"
                        Content="{Binding [ChatGptIndexPageReset], Source={x:Static su:Language.Instance}}" />
                    <ui:Button
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="6"
                        Appearance="Danger"
                        Command="{Binding ViewModel.SetConfigCommand}"
                        Content="{Binding [ChatGptIndexPageConfig], Source={x:Static su:Language.Instance}}" />
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</Page>